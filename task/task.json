{
  "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "79d7e0df-bd9a-4658-9897-ae059fc992c5",
  "name": "sbom-tool",
  "friendlyName": "SBOM Tool",
  "description": "SBOM Tool. Generate SPDX 2.2/2.3 compatible SBOMs from Azure DevOps repository artifacts.",
  "helpMarkDown": "For help, please raise an issue at https://github.com/rhyskoedijk/sbom-azure-devops/issues",
  "helpUrl": "https://github.com/rhyskoedijk/sbom-azure-devops/issues",
  "releaseNotes": "https://github.com/rhyskoedijk/sbom-azure-devops/releases",
  "category": "Azure Pipelines",
  "visibility": ["Build"],
  "runsOn": ["Agent"],
  "minimumAgentVersion": "3.232.1",
  "author": "Rhys Koedijk",
  "version": {
    "Major": 0,
    "Minor": 0,
    "Patch": 0
  },
  "instanceNameFormat": "Generate SBOM manifest",
  "groups": [
    {
      "name": "package",
      "displayName": "Package Information",
      "isExpanded": true
    },
    {
      "name": "advanced",
      "displayName": "Advanced",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "command",
      "type": "pickList",
      "label": "Command",
      "defaultValue": "generate",
      "required": true,
      "helpMarkDown": "The [sbom-tool command](https://github.com/microsoft/sbom-tool?tab=readme-ov-file#run-the-tool) to run",
      "options": {
        "generate": "Generate"
      }
    },
    {
      "name": "buildSourcePath",
      "type": "multiLine",
      "label": "Build Source Paths",
      "defaultValue": "$(Build.SourcesDirectory)",
      "required": true,
      "helpMarkDown": "The list of source code directories (one per line) to be scanned for package dependencies. [Glob patterns](https://globster.xyz/) are supported. Each directory will generates its own set of SBOM manifest files. Defaults to the build repository root directory, which will result in a single SBOM for the entire repository.",
      "visibleRule": "command=generate"
    },
    {
      "name": "buildArtifactPath",
      "type": "multiLine",
      "label": "Build Artifact Paths",
      "defaultValue": "$(Build.ArtifactStagingDirectory)",
      "required": true,
      "helpMarkDown": "The list of directories or files (one per line) to be included as build artifact files in the SBOM. [Glob patterns](https://globster.xyz/) are supported. Relative paths will be resolved from the source code directory. Defaults to the build artifact staging directory.",
      "visibleRule": "command=generate"
    },
    {
      "name": "buildDockerImagesToScan",
      "type": "multiLine",
      "label": "Build Docker Images To Scan",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Comma separated list of docker image names or hashes to be scanned for package dependencies. For example, `ubuntu:16.04, 56bab49eef2ef07505f6a1b0d5bd3a601dfc3c76ad4460f24c91d6fa298369ab`.",
      "visibleRule": "command=generate"
    },
    {
      "name": "manifestOutputPath",
      "type": "string",
      "label": "Manifest Output Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The directory where the generated SBOM manifest files will be written. A subdirectory named '_manifest' will be created at this location. Defaults to `buildArtifactPath`.",
      "visibleRule": "command=generate"
    },
    {
      "name": "enableManifestSpreadsheetGeneration",
      "type": "boolean",
      "label": "Enable Manifest XLSX Spreadsheet Generation",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to `true`, a XLSX spreadsheet representation of the SBOM contents will be generated in the manifest directory.",
      "visibleRule": "command=generate"
    },
    {
      "name": "enableManifestGraphGeneration",
      "type": "boolean",
      "label": "Enable Manifest SVG Graph Generation",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to `true`, a SVG graph diagram of the SBOM contents will be generated in the manifest directory.",
      "visibleRule": "command=generate"
    },
    {
      "name": "enablePackageMetadataParsing",
      "type": "boolean",
      "label": "Enable Package Metadata Parsing",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to `true`, we will attempt to parse license and supplier info from the packages metadata file.",
      "visibleRule": "command=generate"
    },
    {
      "name": "fetchLicenseInformation",
      "type": "boolean",
      "label": "Fetch License Information",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to true, we will attempt to fetch license information for all packages using [ClearlyDefined](https://clearlydefined.io/).",
      "visibleRule": "command=generate"
    },
    {
      "name": "fetchSecurityAdvisories",
      "type": "boolean",
      "label": "Fetch Security Advisory Information",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to true, we will attempt to fetch security advisory information for all packages using the [GitHub Advisory Database](https://github.com/advisories). If enabled, one of `gitHubAccessToken` or `gitHubServiceConnection` must be configured to access the GHSA database. If any security advisories are found, the SPDX document version will be upgraded to 2.3, which is the minimum version that supports security advisory references.",
      "visibleRule": "command=generate"
    },
    {
      "name": "gitHubConnection",
      "type": "connectedService:github:OAuth,PersonalAccessToken,InstallationToken,Token",
      "label": "GitHub Connection (OAuth or PAT)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The GitHub service connection to be used for fetching security advisories. The connection must be based on a GitHub user's OAuth or a GitHub personal access token. Learn more about service connections [here](https://aka.ms/AA3am5s).",
      "visibleRule": "fetchSecurityAdvisories=true"
    },
    {
      "name": "gitHubAccessToken",
      "type": "string",
      "label": "GitHub Access Token (PAT)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The GitHub access token to be used for fetching security advisories. Use this in place of `gitHubConnection` such as when it is not possible to create a service connection.",
      "visibleRule": "fetchSecurityAdvisories=true"
    },
    {
      "groupName": "package",
      "name": "packageName",
      "type": "string",
      "label": "Package Name",
      "defaultValue": "$(Build.Repository.Name)",
      "required": false,
      "helpMarkDown": "The name of the package that this SBOM will describe. Defaults to the build repository name if `buildSourcePath` is a single directory; Defaults to the parent directory name when `buildSourcePath` is a glob pattern.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "package",
      "name": "packageVersion",
      "type": "string",
      "label": "Package Version",
      "defaultValue": "$(Build.BuildNumber)",
      "required": false,
      "helpMarkDown": "The version of the package that this SBOM will describe. Defaults to the build pipeline version number. ",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "package",
      "name": "packageSupplier",
      "type": "string",
      "label": "Package Supplier",
      "defaultValue": "$(System.CollectionId)",
      "required": false,
      "helpMarkDown": "The supplier name of the package that this SBOM will describe. Defaults to the parent collection GUID.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "package",
      "name": "packageNamespaceUriBase",
      "type": "string",
      "label": "Package Namespace URI Base",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The base path of the SPDX namespace URI that this SBOM will describe. Defaults to `https://{packageSupplier}.com`. For example, a base path of `https://companyName.com/teamName` will create the (unique) namespace URI `https://companyName.com/teamName/{packageName}/{packageVersion}/{newGuid}`.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "package",
      "name": "packageNamespaceUriUniquePart",
      "type": "string",
      "label": "Package Namespace URI Unique Part",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "A unique valid URI part that will be appended to the SPDX namespace URI. If specified, this value should be globally unique.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "advanced",
      "name": "additionalComponentDetectorArgs",
      "type": "string",
      "label": "Additional Component Detector Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional arguments for [Component Detector](https://github.com/microsoft/component-detection). Arguments must be space-delimited list of `--key value` pairs. See: https://github.com/microsoft/component-detection/blob/main/docs/detector-arguments.md",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "advanced",
      "name": "externalDocumentReferenceList",
      "type": "string",
      "label": "External Document Reference List",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "A list of external SBOMs (one per line) that will be included as external document references in the SBOM. Referenced files must be in SPDX 2.X format.",
      "visibleRule": "command=generate"
    }
  ],
  "execution": {
    "Node20_1": {
      "target": "index.js"
    }
  }
}
