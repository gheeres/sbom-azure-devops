{
  "$schema": "https://raw.githubusercontent.com/Microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "79d7e0df-bd9a-4658-9897-ae059fc992c5",
  "name": "sbom-tool",
  "friendlyName": "SBOM Tool",
  "description": "SBOM Tool. Generate SPDX 2.2 compatible SBOMs from Azure DevOps repository artifacts.",
  "helpMarkDown": "For help, please raise an issue at https://github.com/rhyskoedijk/sbom-azure-devops/issues",
  "helpUrl": "https://github.com/rhyskoedijk/sbom-azure-devops/issues",
  "releaseNotes": "https://github.com/rhyskoedijk/sbom-azure-devops/releases",
  "category": "Build",
  "visibility": ["Build"],
  "runsOn": ["Agent"],
  "author": "Rhys Koedijk",
  "version": {
    "Major": 1,
    "Minor": 0,
    "Patch": 0
  },
  "instanceNameFormat": "Generate SBOM manifest",
  "groups": [
    {
      "name": "package",
      "displayName": "Package Information",
      "isExpanded": true
    },
    {
      "name": "advanced",
      "displayName": "Advanced",
      "isExpanded": false
    }
  ],
  "inputs": [
    {
      "name": "command",
      "type": "pickList",
      "label": "Command",
      "defaultValue": "generate",
      "required": true,
      "helpMarkDown": "The merge strategy to use. Learn more [here](https://learn.microsoft.com/en-us/rest/api/azure/devops/git/pull-requests/update?view=azure-devops-rest-5.1&tabs=HTTP#gitpullrequestmergestrategy).",
      "options": {
        "generate": "Generate",
        "validate": "Validate",
        "redact": "Redact"
      }
    },
    {
      "name": "buildSourcePath",
      "type": "string",
      "label": "Build Source Path",
      "defaultValue": "$(Build.SourcesDirectory)",
      "required": true,
      "helpMarkDown": "The directory containing build source files to be scanned for package dependencies. Defaults to the source repository root.",
      "visibleRule": "command=generate"
    },
    {
      "name": "buildArtifactPath",
      "type": "string",
      "label": "Build Artifact Path",
      "defaultValue": "$(Build.ArtifactStagingDirectory)",
      "required": true,
      "helpMarkDown": "The directory containing (published) build artifact files for which the SBOM file will describe. Defaults to the build artifact staging directory.",
      "visibleRule": "command=generate"
    },
    {
      "name": "buildFileList",
      "type": "multiLine",
      "label": "Build File List",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The list of file paths (one per line) for which the SBOM file will describe. If specified, this overrides `buildArtifactPath`, only files listed here will be included in the generated SBOM.",
      "visibleRule": "command=generate"
    },
    {
      "name": "buildDockerImagesToScan",
      "type": "string",
      "label": "Build Docker Images To Scan",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Comma separated list of docker image names or hashes to be scanned for package dependencies. For example, `ubuntu:16.04, 56bab49eef2ef07505f6a1b0d5bd3a601dfc3c76ad4460f24c91d6fa298369ab`.",
      "visibleRule": "command=generate"
    },
    {
      "name": "manifestOutputPath",
      "type": "string",
      "label": "Manifest Output Path",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The directory where the generated SBOM files will be placed. A subdirectory named '_manifest' will be created at this location, where all generated SBOMs will be placed. Defaults to `buildArtifactPath`.",
      "visibleRule": "command=generate"
    },
    {
      "name": "enableManifestGraphGeneration",
      "type": "boolean",
      "label": "Enable Manifest Graph Diagram Generation",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to `true`, a SBOM network graph (in SVG format) will be generated in the manifest directory.",
      "visibleRule": "command=generate"
    },
    {
      "name": "enablePackageMetadataParsing",
      "type": "boolean",
      "label": "Enable Package Metadata Parsing",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to `true`, we will attempt to parse license and supplier info from the packages metadata file (RubyGems, NuGet, Maven, Npm).",
      "visibleRule": "command=generate"
    },
    {
      "name": "fetchLicenseInformation",
      "type": "boolean",
      "label": "Fetch License Information",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to true, we will attempt to fetch license information of packages detected in the SBOM from [ClearlyDefined](https://clearlydefined.io/).",
      "visibleRule": "command=generate"
    },
    {
      "name": "fetchSecurityAdvisories",
      "type": "boolean",
      "label": "Fetch Security Advisory Information",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If set to true, we will attempt to fetch security advisory information of packages detected in the SBOM from the [GitHub Advisory Database](https://github.com/advisories). If `true`, one of `gitHubAccessToken` or `gitHubServiceConnection` must be configured.",
      "visibleRule": "command=generate"
    },
    {
      "name": "gitHubConnection",
      "type": "connectedService:github:OAuth,PersonalAccessToken,InstallationToken,Token",
      "label": "GitHub Connection (OAuth or PAT)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The GitHub service connection to be used for fetching security advisories. The connection must be based on a GitHub user's OAuth or a GitHub personal access token. Learn more about service connections [here](https://aka.ms/AA3am5s).",
      "visibleRule": "fetchSecurityAdvisories=true"
    },
    {
      "name": "gitHubAccessToken",
      "type": "string",
      "label": "GitHub Access Token (PAT)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The GitHub access token to be used for fetching security advisories. Use this in place of `gitHubConnection` such as when it is not possible to create a service connection.",
      "visibleRule": "fetchSecurityAdvisories=true"
    },
    {
      "groupName": "package",
      "name": "packageName",
      "type": "string",
      "label": "Package Name",
      "defaultValue": "$(System.TeamProject)",
      "required": true,
      "helpMarkDown": "The name of the package this SBOM represents. Defaults to the parent project name. If this is empty, we will try to infer this name from the build that generated this package.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "package",
      "name": "packageVersion",
      "type": "string",
      "label": "Package Version",
      "defaultValue": "$(Build.BuildNumber)",
      "required": true,
      "helpMarkDown": "The version of the package this SBOM represents. Default to the pipeline build number. If this is empty, we will try to infer the version from the build that generated this package.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "package",
      "name": "packageSupplier",
      "type": "string",
      "label": "Package Supplier",
      "defaultValue": "$(System.CollectionId)",
      "required": true,
      "helpMarkDown": "The supplier of the package that this SBOM represents. Defaults to the parent collection GUID.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "package",
      "name": "packageNamespaceUriBase",
      "type": "string",
      "label": "Package Namespace URI Base",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The base path of the SBOM namespace URI. Defaults to `https://{packageSupplier}.com`. For example, a URI base of `https://companyName.com/teamName` will create the (unique) namespace `https://companyName.com/teamName/{packageName}/{packageVersion}/{newGuid}`.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "package",
      "name": "packageNamespaceUriUniquePart",
      "type": "string",
      "label": "Package Namespace URI Unique Part",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "A unique valid URI part that will be appended to the SBOM namespace URI. If specified, this value should be globally unique.",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "advanced",
      "name": "additionalComponentDetectorArgs",
      "type": "string",
      "label": "Additional Component Detector Arguments",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Additional arguments for [Component Detector](https://github.com/microsoft/component-detection). Arguments must be space-delimited list of `--key value` pairs. See: https://github.com/microsoft/component-detection/blob/main/docs/detector-arguments.md",
      "visibleRule": "command=generate"
    },
    {
      "groupName": "advanced",
      "name": "externalDocumentReferenceList",
      "type": "string",
      "label": "External Document Reference List",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "A list of external SBOMs (one per line) that will be included as external document references in the SBOM. Referenced files must be in SPDX 2.2 format.",
      "visibleRule": "command=generate"
    }
  ],
  "execution": {
    "Node20_1": {
      "target": "index.js"
    }
  }
}
